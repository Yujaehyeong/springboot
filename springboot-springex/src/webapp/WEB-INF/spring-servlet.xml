<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- auto proxy -->
	<aop:aspectj-autoproxy expose-proxy="false" />
	
	<!-- 1. validator, conversionService, messageConvertor -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- 요청에 대한 응답이 Controller 에서 @Responsebody가 붙어있고 String으로 리턴됐을때 이 컨버터를 
				거쳐간다 -->
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 요청에 대한 응답이 Controller 에서 @Responsebody가 붙어있고 json으로 리턴됐을때 이 컨버터를 
				거쳐간다 -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>

		<!-- argument resolver -->
		<mvc:argument-resolvers>
			<bean
				class="com.cafe24.mysite.security.AuthUserHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>

	
	
	</mvc:annotation-driven>

	<!-- 2. 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />

	<!-- the mvc resources url mapping d:/mysite-uploads/-->
	<!-- url이 images/profile/파일명 으로 들어오면 프로젝트가 시작된 d://mysite-uploads/profile/ 밑에서 파일을 찾아서 응답한다. -->
	<mvc:resources mapping="images/profile/**" location="file:/mysite-uploads/profile/" />

	<!-- 3 .ViewResolver 설정 -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 멀티파트 리졸버 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" /-->
		<!-- defaultEncoding <<< [ text로 오는 애들을 어떻게 인코딩할 것인가 ? -->
		<property name="defaultEncoding" value="utf-8" /> 
	</bean>	
	
	<!-- 6. MessageSource -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages/messages_ko</value>
			</list>
		</property>
	</bean>

	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/auth"/>
			<bean class="com.cafe24.mysite.security.AuthLoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/logout"/>
			<bean class="com.cafe24.mysite.security.AuthLogoutInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/user/auth"></mvc:exclude-mapping>
			<mvc:exclude-mapping path="/user/logout"></mvc:exclude-mapping>
			<mvc:exclude-mapping path="/assets/**"></mvc:exclude-mapping>
			<bean class="com.cafe24.mysite.security.AuthInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- 빈설정을 annotation으로 하겠다(@Controller에 auto scanner) -->
	<context:annotation-config />

	<!-- Controller Scanning 하는 base package 지정 -->
	<context:component-scan
		base-package="com.cafe24.mysite.controller, com.cafe24.mysite.controller.api, com.cafe24.mysite.exception" />
	<!-- 베이스 패키지를 지정해서 @Controller로 지정된 클래스들을 찾아서 관리한다 -->
	
	
</beans>